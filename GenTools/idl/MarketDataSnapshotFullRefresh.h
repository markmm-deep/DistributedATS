// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file MarketDataSnapshotFullRefresh.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_DISTRIBUTEDATS_MARKETDATASNAPSHOTFULLREFRESH_MARKETDATASNAPSHOTFULLREFRESH_H_
#define _FAST_DDS_GENERATED_DISTRIBUTEDATS_MARKETDATASNAPSHOTFULLREFRESH_MARKETDATASNAPSHOTFULLREFRESH_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "Header.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(MARKETDATASNAPSHOTFULLREFRESH_SOURCE)
#define MARKETDATASNAPSHOTFULLREFRESH_DllAPI __declspec( dllexport )
#else
#define MARKETDATASNAPSHOTFULLREFRESH_DllAPI __declspec( dllimport )
#endif // MARKETDATASNAPSHOTFULLREFRESH_SOURCE
#else
#define MARKETDATASNAPSHOTFULLREFRESH_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define MARKETDATASNAPSHOTFULLREFRESH_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace DistributedATS_MarketDataSnapshotFullRefresh {



/*!
 * @brief This class represents the structure NoMDEntries defined by the user in the IDL file.
 * @ingroup MarketDataSnapshotFullRefresh
 */
class NoMDEntries
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport NoMDEntries();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~NoMDEntries();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntries that will be copied.
     */
    eProsima_user_DllExport NoMDEntries(
            const NoMDEntries& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntries that will be copied.
     */
    eProsima_user_DllExport NoMDEntries(
            NoMDEntries&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntries that will be copied.
     */
    eProsima_user_DllExport NoMDEntries& operator =(
            const NoMDEntries& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntries that will be copied.
     */
    eProsima_user_DllExport NoMDEntries& operator =(
            NoMDEntries&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntries object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const NoMDEntries& x) const;

    /*!
     * @brief Comparison operator.
     * @param x DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntries object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const NoMDEntries& x) const;

    /*!
     * @brief This function sets a value in member MDEntryType
     * @param _MDEntryType New value for member MDEntryType
     */
    eProsima_user_DllExport void MDEntryType(
            char _MDEntryType);

    /*!
     * @brief This function returns the value of member MDEntryType
     * @return Value of member MDEntryType
     */
    eProsima_user_DllExport char MDEntryType() const;

    /*!
     * @brief This function returns a reference to member MDEntryType
     * @return Reference to member MDEntryType
     */
    eProsima_user_DllExport char& MDEntryType();


    /*!
     * @brief This function sets a value in member MDEntryPx
     * @param _MDEntryPx New value for member MDEntryPx
     */
    eProsima_user_DllExport void MDEntryPx(
            float _MDEntryPx);

    /*!
     * @brief This function returns the value of member MDEntryPx
     * @return Value of member MDEntryPx
     */
    eProsima_user_DllExport float MDEntryPx() const;

    /*!
     * @brief This function returns a reference to member MDEntryPx
     * @return Reference to member MDEntryPx
     */
    eProsima_user_DllExport float& MDEntryPx();


    /*!
     * @brief This function sets a value in member MDEntrySize
     * @param _MDEntrySize New value for member MDEntrySize
     */
    eProsima_user_DllExport void MDEntrySize(
            int32_t _MDEntrySize);

    /*!
     * @brief This function returns the value of member MDEntrySize
     * @return Value of member MDEntrySize
     */
    eProsima_user_DllExport int32_t MDEntrySize() const;

    /*!
     * @brief This function returns a reference to member MDEntrySize
     * @return Reference to member MDEntrySize
     */
    eProsima_user_DllExport int32_t& MDEntrySize();


    /*!
     * @brief This function sets a value in member TimeInForce
     * @param _TimeInForce New value for member TimeInForce
     */
    eProsima_user_DllExport void TimeInForce(
            char _TimeInForce);

    /*!
     * @brief This function returns the value of member TimeInForce
     * @return Value of member TimeInForce
     */
    eProsima_user_DllExport char TimeInForce() const;

    /*!
     * @brief This function returns a reference to member TimeInForce
     * @return Reference to member TimeInForce
     */
    eProsima_user_DllExport char& TimeInForce();


    /*!
     * @brief This function copies the value in member ExecInst
     * @param _ExecInst New value to be copied in member ExecInst
     */
    eProsima_user_DllExport void ExecInst(
            const std::string& _ExecInst);

    /*!
     * @brief This function moves the value in member ExecInst
     * @param _ExecInst New value to be moved in member ExecInst
     */
    eProsima_user_DllExport void ExecInst(
            std::string&& _ExecInst);

    /*!
     * @brief This function returns a constant reference to member ExecInst
     * @return Constant reference to member ExecInst
     */
    eProsima_user_DllExport const std::string& ExecInst() const;

    /*!
     * @brief This function returns a reference to member ExecInst
     * @return Reference to member ExecInst
     */
    eProsima_user_DllExport std::string& ExecInst();


    /*!
     * @brief This function copies the value in member Text
     * @param _Text New value to be copied in member Text
     */
    eProsima_user_DllExport void Text(
            const std::string& _Text);

    /*!
     * @brief This function moves the value in member Text
     * @param _Text New value to be moved in member Text
     */
    eProsima_user_DllExport void Text(
            std::string&& _Text);

    /*!
     * @brief This function returns a constant reference to member Text
     * @return Constant reference to member Text
     */
    eProsima_user_DllExport const std::string& Text() const;

    /*!
     * @brief This function returns a reference to member Text
     * @return Reference to member Text
     */
    eProsima_user_DllExport std::string& Text();

private:

    char m_MDEntryType{0};
    float m_MDEntryPx{0.0};
    int32_t m_MDEntrySize{0};
    char m_TimeInForce{0};
    std::string m_ExecInst;
    std::string m_Text;

};


typedef std::vector<DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntries> NoMDEntriesSeq;



/*!
 * @brief This class represents the structure MarketDataSnapshotFullRefresh defined by the user in the IDL file.
 * @ingroup MarketDataSnapshotFullRefresh
 */
class MarketDataSnapshotFullRefresh
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport MarketDataSnapshotFullRefresh();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~MarketDataSnapshotFullRefresh();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object DistributedATS_MarketDataSnapshotFullRefresh::MarketDataSnapshotFullRefresh that will be copied.
     */
    eProsima_user_DllExport MarketDataSnapshotFullRefresh(
            const MarketDataSnapshotFullRefresh& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object DistributedATS_MarketDataSnapshotFullRefresh::MarketDataSnapshotFullRefresh that will be copied.
     */
    eProsima_user_DllExport MarketDataSnapshotFullRefresh(
            MarketDataSnapshotFullRefresh&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object DistributedATS_MarketDataSnapshotFullRefresh::MarketDataSnapshotFullRefresh that will be copied.
     */
    eProsima_user_DllExport MarketDataSnapshotFullRefresh& operator =(
            const MarketDataSnapshotFullRefresh& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object DistributedATS_MarketDataSnapshotFullRefresh::MarketDataSnapshotFullRefresh that will be copied.
     */
    eProsima_user_DllExport MarketDataSnapshotFullRefresh& operator =(
            MarketDataSnapshotFullRefresh&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x DistributedATS_MarketDataSnapshotFullRefresh::MarketDataSnapshotFullRefresh object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const MarketDataSnapshotFullRefresh& x) const;

    /*!
     * @brief Comparison operator.
     * @param x DistributedATS_MarketDataSnapshotFullRefresh::MarketDataSnapshotFullRefresh object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const MarketDataSnapshotFullRefresh& x) const;

    /*!
     * @brief This function copies the value in member header
     * @param _header New value to be copied in member header
     */
    eProsima_user_DllExport void header(
            const DistributedATS::Header& _header);

    /*!
     * @brief This function moves the value in member header
     * @param _header New value to be moved in member header
     */
    eProsima_user_DllExport void header(
            DistributedATS::Header&& _header);

    /*!
     * @brief This function returns a constant reference to member header
     * @return Constant reference to member header
     */
    eProsima_user_DllExport const DistributedATS::Header& header() const;

    /*!
     * @brief This function returns a reference to member header
     * @return Reference to member header
     */
    eProsima_user_DllExport DistributedATS::Header& header();


    /*!
     * @brief This function copies the value in member MDReqID
     * @param _MDReqID New value to be copied in member MDReqID
     */
    eProsima_user_DllExport void MDReqID(
            const std::string& _MDReqID);

    /*!
     * @brief This function moves the value in member MDReqID
     * @param _MDReqID New value to be moved in member MDReqID
     */
    eProsima_user_DllExport void MDReqID(
            std::string&& _MDReqID);

    /*!
     * @brief This function returns a constant reference to member MDReqID
     * @return Constant reference to member MDReqID
     */
    eProsima_user_DllExport const std::string& MDReqID() const;

    /*!
     * @brief This function returns a reference to member MDReqID
     * @return Reference to member MDReqID
     */
    eProsima_user_DllExport std::string& MDReqID();


    /*!
     * @brief This function copies the value in member Symbol
     * @param _Symbol New value to be copied in member Symbol
     */
    eProsima_user_DllExport void Symbol(
            const std::string& _Symbol);

    /*!
     * @brief This function moves the value in member Symbol
     * @param _Symbol New value to be moved in member Symbol
     */
    eProsima_user_DllExport void Symbol(
            std::string&& _Symbol);

    /*!
     * @brief This function returns a constant reference to member Symbol
     * @return Constant reference to member Symbol
     */
    eProsima_user_DllExport const std::string& Symbol() const;

    /*!
     * @brief This function returns a reference to member Symbol
     * @return Reference to member Symbol
     */
    eProsima_user_DllExport std::string& Symbol();


    /*!
     * @brief This function copies the value in member SecurityExchange
     * @param _SecurityExchange New value to be copied in member SecurityExchange
     */
    eProsima_user_DllExport void SecurityExchange(
            const std::string& _SecurityExchange);

    /*!
     * @brief This function moves the value in member SecurityExchange
     * @param _SecurityExchange New value to be moved in member SecurityExchange
     */
    eProsima_user_DllExport void SecurityExchange(
            std::string&& _SecurityExchange);

    /*!
     * @brief This function returns a constant reference to member SecurityExchange
     * @return Constant reference to member SecurityExchange
     */
    eProsima_user_DllExport const std::string& SecurityExchange() const;

    /*!
     * @brief This function returns a reference to member SecurityExchange
     * @return Reference to member SecurityExchange
     */
    eProsima_user_DllExport std::string& SecurityExchange();


    /*!
     * @brief This function copies the value in member c_NoMDEntries
     * @param _c_NoMDEntries New value to be copied in member c_NoMDEntries
     */
    eProsima_user_DllExport void c_NoMDEntries(
            const DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntriesSeq& _c_NoMDEntries);

    /*!
     * @brief This function moves the value in member c_NoMDEntries
     * @param _c_NoMDEntries New value to be moved in member c_NoMDEntries
     */
    eProsima_user_DllExport void c_NoMDEntries(
            DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntriesSeq&& _c_NoMDEntries);

    /*!
     * @brief This function returns a constant reference to member c_NoMDEntries
     * @return Constant reference to member c_NoMDEntries
     */
    eProsima_user_DllExport const DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntriesSeq& c_NoMDEntries() const;

    /*!
     * @brief This function returns a reference to member c_NoMDEntries
     * @return Reference to member c_NoMDEntries
     */
    eProsima_user_DllExport DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntriesSeq& c_NoMDEntries();

private:

    DistributedATS::Header m_header;
    std::string m_MDReqID;
    std::string m_Symbol;
    std::string m_SecurityExchange;
    DistributedATS_MarketDataSnapshotFullRefresh::NoMDEntriesSeq m_c_NoMDEntries;

};

} // namespace DistributedATS_MarketDataSnapshotFullRefresh

#endif // _FAST_DDS_GENERATED_DISTRIBUTEDATS_MARKETDATASNAPSHOTFULLREFRESH_MARKETDATASNAPSHOTFULLREFRESH_H_



